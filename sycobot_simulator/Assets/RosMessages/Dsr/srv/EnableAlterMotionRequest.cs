//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Dsr
{
    [Serializable]
    public class EnableAlterMotionRequest : Message
    {
        public const string k_RosMessageName = "dsr_msgs/EnableAlterMotion";
        public override string RosMessageName => k_RosMessageName;

        // ____________________________________________________________________________________________
        //  enable_alter_motion  
        //  
        // ____________________________________________________________________________________________
        public int n;
        //  Cycle time number 
        public sbyte mode;
        //  DR_DPOS(0) : accumulation amount, DR_DVEL(1) : increment amount 
        public sbyte @ref;
        //  DR_BASE(0), DR_TOOL(1), DR_WORLD(2), user coord(101~200) 
        //  <ref is only available in M2.40 or later> 
        public double[] limit_dPOS;
        //  First value : limitation of position[mm], Second value : limitation of orientation[deg]
        public double[] limit_dPOS_per;
        //  First value : limitation of position[mm], Second value : limitation of orientation[deg]

        public EnableAlterMotionRequest()
        {
            this.n = 0;
            this.mode = 0;
            this.@ref = 0;
            this.limit_dPOS = new double[2];
            this.limit_dPOS_per = new double[2];
        }

        public EnableAlterMotionRequest(int n, sbyte mode, sbyte @ref, double[] limit_dPOS, double[] limit_dPOS_per)
        {
            this.n = n;
            this.mode = mode;
            this.@ref = @ref;
            this.limit_dPOS = limit_dPOS;
            this.limit_dPOS_per = limit_dPOS_per;
        }

        public static EnableAlterMotionRequest Deserialize(MessageDeserializer deserializer) => new EnableAlterMotionRequest(deserializer);

        private EnableAlterMotionRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.n);
            deserializer.Read(out this.mode);
            deserializer.Read(out this.@ref);
            deserializer.Read(out this.limit_dPOS, sizeof(double), 2);
            deserializer.Read(out this.limit_dPOS_per, sizeof(double), 2);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.n);
            serializer.Write(this.mode);
            serializer.Write(this.@ref);
            serializer.Write(this.limit_dPOS);
            serializer.Write(this.limit_dPOS_per);
        }

        public override string ToString()
        {
            return "EnableAlterMotionRequest: " +
            "\nn: " + n.ToString() +
            "\nmode: " + mode.ToString() +
            "\n@ref: " + @ref.ToString() +
            "\nlimit_dPOS: " + System.String.Join(", ", limit_dPOS.ToList()) +
            "\nlimit_dPOS_per: " + System.String.Join(", ", limit_dPOS_per.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
