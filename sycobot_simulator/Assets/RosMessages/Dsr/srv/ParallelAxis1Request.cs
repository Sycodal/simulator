//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Dsr
{
    [Serializable]
    public class ParallelAxis1Request : Message
    {
        public const string k_RosMessageName = "dsr_msgs/ParallelAxis1";
        public override string RosMessageName => k_RosMessageName;

        // ____________________________________________________________________________________________
        //  parallel_axis(x1, x2, x3, axis, ref)  
        // ____________________________________________________________________________________________
        public double[] x1;
        //  task pos(posx)  
        public double[] x2;
        //  task pos(posx)  
        public double[] x3;
        //  task pos(posx)
        public sbyte axis;
        //  DR_AXIS_X(0), DR_AXIS_Y(1), DR_AXIS_Z(2) 
        public sbyte @ref;
        // = 0   # DR_BASE(0), DR_WORLD(2), user coord(101~200)
        //  <ref is only available in M2.40 or later> 

        public ParallelAxis1Request()
        {
            this.x1 = new double[6];
            this.x2 = new double[6];
            this.x3 = new double[6];
            this.axis = 0;
            this.@ref = 0;
        }

        public ParallelAxis1Request(double[] x1, double[] x2, double[] x3, sbyte axis, sbyte @ref)
        {
            this.x1 = x1;
            this.x2 = x2;
            this.x3 = x3;
            this.axis = axis;
            this.@ref = @ref;
        }

        public static ParallelAxis1Request Deserialize(MessageDeserializer deserializer) => new ParallelAxis1Request(deserializer);

        private ParallelAxis1Request(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.x1, sizeof(double), 6);
            deserializer.Read(out this.x2, sizeof(double), 6);
            deserializer.Read(out this.x3, sizeof(double), 6);
            deserializer.Read(out this.axis);
            deserializer.Read(out this.@ref);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.x1);
            serializer.Write(this.x2);
            serializer.Write(this.x3);
            serializer.Write(this.axis);
            serializer.Write(this.@ref);
        }

        public override string ToString()
        {
            return "ParallelAxis1Request: " +
            "\nx1: " + System.String.Join(", ", x1.ToList()) +
            "\nx2: " + System.String.Join(", ", x2.ToList()) +
            "\nx3: " + System.String.Join(", ", x3.ToList()) +
            "\naxis: " + axis.ToString() +
            "\n@ref: " + @ref.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
