//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Dsr
{
    [Serializable]
    public class CalcCoordRequest : Message
    {
        public const string k_RosMessageName = "dsr_msgs/CalcCoord";
        public override string RosMessageName => k_RosMessageName;

        // ____________________________________________________________________________________________
        //  calc_coord   
        // ____________________________________________________________________________________________
        //  This service is only available in M2.50 or later
        public sbyte input_pos_cnt;
        //  input_pos_cnt
        public double[] x1;
        //  task pos(posx)  
        public double[] x2;
        //  task pos(posx)  
        public double[] x3;
        //  task pos(posx)
        public double[] x4;
        //  task pos(posx)
        public sbyte @ref;
        //  DR_BASE(0), DR_WORLD(2)
        public sbyte mod;
        //  input mode(only valid when the number of input poses is 2)
        //  0: defining z-axis based on the current Tool-z direction
        //  1: defining z-axis based on the z direction of x1 

        public CalcCoordRequest()
        {
            this.input_pos_cnt = 0;
            this.x1 = new double[6];
            this.x2 = new double[6];
            this.x3 = new double[6];
            this.x4 = new double[6];
            this.@ref = 0;
            this.mod = 0;
        }

        public CalcCoordRequest(sbyte input_pos_cnt, double[] x1, double[] x2, double[] x3, double[] x4, sbyte @ref, sbyte mod)
        {
            this.input_pos_cnt = input_pos_cnt;
            this.x1 = x1;
            this.x2 = x2;
            this.x3 = x3;
            this.x4 = x4;
            this.@ref = @ref;
            this.mod = mod;
        }

        public static CalcCoordRequest Deserialize(MessageDeserializer deserializer) => new CalcCoordRequest(deserializer);

        private CalcCoordRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.input_pos_cnt);
            deserializer.Read(out this.x1, sizeof(double), 6);
            deserializer.Read(out this.x2, sizeof(double), 6);
            deserializer.Read(out this.x3, sizeof(double), 6);
            deserializer.Read(out this.x4, sizeof(double), 6);
            deserializer.Read(out this.@ref);
            deserializer.Read(out this.mod);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.input_pos_cnt);
            serializer.Write(this.x1);
            serializer.Write(this.x2);
            serializer.Write(this.x3);
            serializer.Write(this.x4);
            serializer.Write(this.@ref);
            serializer.Write(this.mod);
        }

        public override string ToString()
        {
            return "CalcCoordRequest: " +
            "\ninput_pos_cnt: " + input_pos_cnt.ToString() +
            "\nx1: " + System.String.Join(", ", x1.ToList()) +
            "\nx2: " + System.String.Join(", ", x2.ToList()) +
            "\nx3: " + System.String.Join(", ", x3.ToList()) +
            "\nx4: " + System.String.Join(", ", x4.ToList()) +
            "\n@ref: " + @ref.ToString() +
            "\nmod: " + mod.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
