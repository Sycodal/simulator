//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Dsr
{
    [Serializable]
    public class AlignAxis2Request : Message
    {
        public const string k_RosMessageName = "dsr_msgs/AlignAxis2";
        public override string RosMessageName => k_RosMessageName;

        // ____________________________________________________________________________________________
        //  align_axis(target_vect, source_vect, axis, ref)
        // ____________________________________________________________________________________________
        public double[] target_vect;
        //  target vector[3]  
        public double[] source_vect;
        //  source vector[3]  
        public sbyte axis;
        //  DR_AXIS_X(0), DR_AXIS_Y(1), DR_AXIS_Z(2) 
        public sbyte @ref;
        //  DR_BASE(0), DR_WORLD(2), user coord(101~200)
        //  <ref is only available in M2.40 or later> 

        public AlignAxis2Request()
        {
            this.target_vect = new double[3];
            this.source_vect = new double[3];
            this.axis = 0;
            this.@ref = 0;
        }

        public AlignAxis2Request(double[] target_vect, double[] source_vect, sbyte axis, sbyte @ref)
        {
            this.target_vect = target_vect;
            this.source_vect = source_vect;
            this.axis = axis;
            this.@ref = @ref;
        }

        public static AlignAxis2Request Deserialize(MessageDeserializer deserializer) => new AlignAxis2Request(deserializer);

        private AlignAxis2Request(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.target_vect, sizeof(double), 3);
            deserializer.Read(out this.source_vect, sizeof(double), 3);
            deserializer.Read(out this.axis);
            deserializer.Read(out this.@ref);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.target_vect);
            serializer.Write(this.source_vect);
            serializer.Write(this.axis);
            serializer.Write(this.@ref);
        }

        public override string ToString()
        {
            return "AlignAxis2Request: " +
            "\ntarget_vect: " + System.String.Join(", ", target_vect.ToList()) +
            "\nsource_vect: " + System.String.Join(", ", source_vect.ToList()) +
            "\naxis: " + axis.ToString() +
            "\n@ref: " + @ref.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
