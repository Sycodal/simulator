//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Dsr
{
    [Serializable]
    public class ConfigCreateModbusRequest : Message
    {
        public const string k_RosMessageName = "dsr_msgs/ConfigCreateModbus";
        public override string RosMessageName => k_RosMessageName;

        // ____________________________________________________________________________________________
        //  config_create_modbus  
        //  This service registers the Modbus signal. 
        // ____________________________________________________________________________________________
        public string name;
        //  modbus signal symbol 
        public string ip;
        //  external device ip
        public int port;
        //  external device port     
        public sbyte reg_type;
        //  <MODBUS_REGISTER_TYPE>(0: discrete input, 1: coil, 2: input register, 3: holding register)
        public sbyte index;
        //  modbus signal index(0 ~ 9999)
        public sbyte value;
        //  modbus singla value(unsigned value ; 0 ~ 65535)
        public int slave_id;
        //  Slave ID of the ModbusTCP(0: Broadcase address or 1-247 or 255: Default value for ModbusTCP) 
        //  <slave_id is only available in M2.40 or later versions>  

        public ConfigCreateModbusRequest()
        {
            this.name = "";
            this.ip = "";
            this.port = 0;
            this.reg_type = 0;
            this.index = 0;
            this.value = 0;
            this.slave_id = 0;
        }

        public ConfigCreateModbusRequest(string name, string ip, int port, sbyte reg_type, sbyte index, sbyte value, int slave_id)
        {
            this.name = name;
            this.ip = ip;
            this.port = port;
            this.reg_type = reg_type;
            this.index = index;
            this.value = value;
            this.slave_id = slave_id;
        }

        public static ConfigCreateModbusRequest Deserialize(MessageDeserializer deserializer) => new ConfigCreateModbusRequest(deserializer);

        private ConfigCreateModbusRequest(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.name);
            deserializer.Read(out this.ip);
            deserializer.Read(out this.port);
            deserializer.Read(out this.reg_type);
            deserializer.Read(out this.index);
            deserializer.Read(out this.value);
            deserializer.Read(out this.slave_id);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.name);
            serializer.Write(this.ip);
            serializer.Write(this.port);
            serializer.Write(this.reg_type);
            serializer.Write(this.index);
            serializer.Write(this.value);
            serializer.Write(this.slave_id);
        }

        public override string ToString()
        {
            return "ConfigCreateModbusRequest: " +
            "\nname: " + name.ToString() +
            "\nip: " + ip.ToString() +
            "\nport: " + port.ToString() +
            "\nreg_type: " + reg_type.ToString() +
            "\nindex: " + index.ToString() +
            "\nvalue: " + value.ToString() +
            "\nslave_id: " + slave_id.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
